#!/bin/zsh

# Uncomment during development
# set -x

XRCDIR=$(cd `dirname $0` && pwd)

$XRCDIR/update
if [ $? -eq 2 ]; then
  echo "Found new version. Restarting."
  exec $XRCDIR/install
fi

which brew 2>&1 >/dev/null
if [ $? -ne 0 ]; then
  echo "Unable to find brew. Aborting."
  exit 1
fi

which python3 2>&1 | grep "/usr/local/bin/" 2>&1 >/dev/null
if [ $? -ne 0 ]; then
  echo "Python 3 not found or not new enough, installing via brew"
  brew install python3 || exit 1
fi

which nvim 2>&1 >/dev/null
if [ $? -ne 0 ]; then
  echo "Neovim not found, installing via brew"
  brew install neovim || exit 1
  echo "Ensuring python module exists"
  pip3 install neovim || exit 1
fi

which fasd 2>&1 >/dev/null
if [ $? -ne 0 ]; then
  echo "fasd not found, installing via brew"
  brew install fasd || exit 1
fi

which exa 2>&1 >/dev/null
if [ $? -ne 0 ]; then
  echo "exa not found, installing via brew"
  brew install exa || exit 1
fi

which fzf 2>&1 >/dev/null
if [ $? -ne 0 ]; then
  echo "fzf not found, installing via brew"
  brew install fzf || exit 1
  $(brew --prefix)/opt/fzf/install --key-bindings --completion --no-update-rc --no-bash --no-fish || exit 1
fi

which trash 2>&1 >/dev/null
if [ $? -ne 0 ]; then
  echo "trash not found, installing via brew"
  brew install trash || exit 1
fi

which direnv 2>&1 >/dev/null
if [ $? -ne 0 ]; then
  echo "direnv not found, installing via brew"
  brew install direnv || exit 1
fi

ctags --version 2>&1 | grep Universal 2>&1 >/dev/null
if [ $? -ne 0 ]; then
  echo "universal-ctags not found, installing via brew"
  brew install --HEAD universal-ctags/universal-ctags/universal-ctags || exit 1
fi

if [ ! -d ~/.config ]; then
  mkdir ~/.config
fi

if [ ! -d ~/.config/nvim ]; then
  echo "Linking nvim config"
  ln -sv $XRCDIR/nvim ~/.config
fi

if [ ! -d ~/.cache/dein ]; then
  echo "Installing dein"
  curl https://raw.githubusercontent.com/Shougo/dein.vim/master/bin/installer.sh > /tmp/dein-installer.sh
  sh /tmp/dein-installer.sh ~/.cache/dein
fi

if [ ! -d ~/.config/git ]; then
  echo "Linking git config"
  ln -sv $XRCDIR/git ~/.config
fi

if [ ! -f ~/.ctags ]; then
  echo "Linking ctags config"
  ln -sv $XRCDIR/ctags/ctags ~/.ctags
fi

for config in zshrc zshenv zlogin zimrc; do
  if [ ! -h ~/.$config ]; then
    if [ -f ~/.$config ]; then
      echo "Preserving old .$config"
      mv -v ~/.$config ~/.$config.old
    fi
    echo "Linking .$config"
    ln -sv $XRCDIR/$config ~/.$config
  fi
done

# Launch zim install
source $XRCDIR/zim/zimfw.zsh install
